import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv
import os

from bot.handlers.weather import router as weather_router
from bot.handlers.forecast import router as forecast_router
from bot.handlers.nextday import router as nextday_router

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError(
        "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞. "
        "–°–æ–∑–¥–∞–π —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å BOT_TOKEN='—Ç–≤–æ–π_—Ç–æ–∫–µ–Ω'"
    )

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(Command("start"))
async def cmd_start(message: types.Message) -> None:
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üëã –Ø —Å–µ–º–µ–π–Ω—ã–π –±–æ—Ç. –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

# --- –ö–æ–º–∞–Ω–¥–∞ /help ---
@dp.message(Command("help"))
async def cmd_help(message: types.Message) -> None:
    await message.answer(
        "–Ø –º–æ–≥—É –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n\n"
        "/weather <–≥–æ—Ä–æ–¥> - —Ç–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞\n"
        "/forecast <–≥–æ—Ä–æ–¥> - –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è\n"
        "/nextday <–≥–æ—Ä–æ–¥> - –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å —Å —à–∞–≥–æ–º 3 —á–∞—Å–∞"
    )

# --- –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã ---
dp.include_router(weather_router)
dp.include_router(forecast_router)
dp.include_router(nextday_router)

# --- –≠—Ö–æ-—Ö—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ ---
@dp.message(lambda message: not message.text.startswith("/"))
async def echo_message(message: types.Message) -> None:
    await message.answer(f"–¢—ã —Å–∫–∞–∑–∞–ª: {message.text}")

# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ---
async def main() -> None:
    await dp.start_polling(bot, skip_updates=True)  # skip_updates=True -> –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∞–ø–¥–µ–π—Ç—ã

if __name__ == "__main__":
    asyncio.run(main())